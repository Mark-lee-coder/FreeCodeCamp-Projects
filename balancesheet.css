/*!important makes sure you do not overwrite earlier properties*/
span[class~="sr-only"]/*selects any span element whose class includes sr-only*/ {
    border: 0 !important;
    clip/*defines the visible portions of an element*/: rect(1px, 1px, 1px, 1px) !important;
    clip-path/*determines the shape the clip property should take*/: inset(50%) !important;
    -webkit-clip-path: inset(50%) !important;
    height: 1px !important;
    width: 1px !important;
    /*the next 2 properties prevent text content from overflowing*/
    overflow: hidden !important;
    white-space: nowrap !important;
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
}

html {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #0a0a23;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

h1 .flex/*targets the flex container*/ {
    display: flex;
    flex-direction: column-reverse;/*this will display the nested elements from bottom to top*/
    gap: 1rem;
}

h1 .flex span:first-of-type/*targets the first span element in the .flex container*/ {
    font-size: 0.7em;
}

h1 .flex span:last-of-type/*targets the last span in the flex container*/ {
    font-size: 1.2em;
}

section {
    max-width: 40rem;
    margin: 0 auto;
    border: 2px solid #d0d0d5;
}

#years {
    display: flex;
    justify-content: flex-end;
    position: sticky;
    top: 0;
    background: #0a0a23;
    color: #fff;
    z-index: 999;
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;/*The calc() function is a CSS function that allows you to calculate a value based on other values*/
    margin: 0 -2px;
}

#years span[class]/*targets any span element that has a class attribute set, regardless of the attribute's value*/ {
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

table {
    border-collapse: collapse;
    border: 0;
    width: 100%;
    position: relative;
    margin-top: 3rem;
}

table caption {
    color: #356eaf;
    font-size: 1.3em;
    font-weight: normal;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
}

tbody td/*targets td elements inside tbody*/ {
    width: 100vw;
    min-width: 4rem;
    max-width: 4rem;
}

tbody th/*targets th elements inside tbody*/ {
    width: calc(100% - 12rem);
}

tr[class="total"]/*targets specifically the tr elements with the total class*/ {
    border-bottom: 4px double #0a0a23;
    font-weight: bold;
}

tr[class="total"] th/*targets the th elements within the table rows where the class is total*/ {
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

tr.total td/*targets all td elements within the .total rows*/ {
    text-align: right;
    padding: 0 0.25rem;
}

tr.total td:nth-of-type(3)/*targets the third td element within the total table rows*/ {
    padding-right: 0.5rem;
}

tr.total:hover {
    background-color: #99c9ff;
}

td.current /*targets the td elements with the current class*/ {
    font-style: italic;
}

tr.data/*targets the tr elements with the data class*/ {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th/*selects the th elements within the tr.data elements*/ {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description/*targets the elements with the class set to description that are within the th elements in the .data table rows*/ {
    display: block;
    font-weight: normal;
    font-style: italic;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td/*targets the td elements within your tr.data elements*/ {
    vertical-align: top;
    padding: 0.3rem 0.25rem 0;
    text-align: right;
}

tr.data td:last-of-type/*targets the td elements within your tr.data elements, but only the last one*/ {
    padding-right: 0.5rem;
}